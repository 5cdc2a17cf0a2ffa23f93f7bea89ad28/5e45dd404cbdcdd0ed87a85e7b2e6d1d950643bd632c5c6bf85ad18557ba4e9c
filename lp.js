eval(atob("cCA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCkKCmlmIChwLmdldCgiaWQiKSA9PSAiMjMwODE3IikgewogIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNlbWFpbCA+IGRpdiA+IGRpdiA+IGRpdi5lbWFpbC1vcGVuLWhlYWRlci5yb3cgPiBoMSIpLmlubmVyVGV4dCA9ICJTZWNvbmRhcnkgQXBwbGljYXRpb24gQ29tcGxldGUiCiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI21zZzIzMDgxNyA+IGRpdi5pbmJveC1pbmZvLWJhci5lbWFpbC1oZWFkZXIgPiBzcGFuLmVtYWlsLXNlbnQtb24uZW1haWwtaW5mby1ncm91cCA+IGkiKS5pbm5lclRleHQgPSAiMTEvMjYvMjAyNCAxOjUxOjMyIFBNIgogIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNtc2cyMzA4MTcgPiBkaXYuaW5ib3gtbWVzc2FnZSIpLmlubmVySFRNTCA9ICc8cD48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsiPkdyZWV0aW5ncyZuYnNwO1NpZGRoYXJ0aCZuYnNwO01vaGFuLDwvc3Bhbj48L3A+PHA+PHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Ij5UaGFuayB5b3UgZm9yIHlvdXIgaW50ZXJlc3QgaW4gVGhlIFBlbm5zeWx2YW5pYSBTdGF0ZSBVbml2ZXJzaXR5IENvbGxlZ2Ugb2YgTWVkaWNpbmUuIFdlIGhhdmUgcmVjZWl2ZWQgeW91ciBzZWNvbmRhcnkgYXBwbGljYXRpb24sIGFuZCBhcmUgaGFwcHkgdG8gd2VsY29tZSB5b3UgaW50byB0aGUgY2FuZGlkYXRlIHBvb2wgZm9yIHRoZSBFbnRlcmluZyBDbGFzcyBvZiAyMDI1ITwvc3Bhbj48L3A+PHA+PHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Ij5XZSB3aWxsIGJlIHNlbmRpbmcgaW50ZXJ2aWV3IG5vdGlmaWNhdGlvbnMgZnJvbSBtaWQtU2VwdGVtYmVyIHRocm91Z2ggTWFyY2guIFdlIGVuY291cmFnZSB5b3UgdG8gcmV2aWV3IG91ciA8YSBocmVmPSJodHRwczovL21lZC5wc3UuZWR1L21kL2FwcGx5L3Byb2Nlc3MiPndlYnNpdGU8L2E+IGZvciBpbmZvcm1hdGlvbiBvbiB0aGUgaW50ZXJ2aWV3IHByb2Nlc3MuPC9zcGFuPjwvcD48cD5TaG91bGQgeW91IGV4cGVyaWVuY2UgYW55IHByb2JsZW1zIHdpdGggb3VyIGFwcGxpY2F0aW9uLCBvciBoYXZlIGFueSBvdGhlciBxdWVzdGlvbnMgb3IgY29uY2VybnMsIHBsZWFzZSBkbyBub3QgaGVzaXRhdGUgdG8gZW1haWwgdXMgYXQgPGEgaHJlZj0ibWFpbHRvOlN0dWRlbnRBZG1pc3Npb25zQGhtYy5wc3UuZWR1Ij5TdHVkZW50QWRtaXNzaW9uc0BwZW5uc3RhdGVoZWFsdGgucHN1LmVkdTwvYT4sIG9yIGNhbGwgdGhlIE9mZmljZSBvZiBTdHVkZW50IEFkbWlzc2lvbnMgYmV0d2VlbiA3YW0gYW5kIDM6MzBwbSwgRVNULCBhdCAoNzE3KSA1MzEtODc1NS48L3A+PHA+V2UgYXJlIHZlcnkgbXVjaCBsb29raW5nIGZvcndhcmQgdG8gaW50ZXJ2aWV3aW5nIHlvdSwgYW5kIGFwcHJlY2lhdGUgeW91ciBpbnRlcmVzdCBpbiBQZW5uIFN0YXRlIENvbGxlZ2Ugb2YgTWVkaWNpbmUuPC9wPjxwPlNpbmNlcmVseSw8YnI+IE1hcmMgTHViYmVycywgTS5NLjxicj4gRGlyZWN0b3Igb2YgTWVkaWNhbCBTdHVkZW50IEFkbWlzc2lvbnM8YnI+T2ZmaWNlIG9mIE1lZGljYWwgU3R1ZGVudCBBZG1pc3Npb25zLCBIMDYwPGJyPiBQZW5uIFN0YXRlIENvbGxlZ2Ugb2YgTWVkaWNpbmU8YnI+IDUwMCBVbml2ZXJzaXR5IERyaXZlLCBQLk8uIEJveCA4NTA8YnI+IEhlcnNoZXksIFBBIDE3MDMzPGJyPiBUZWw6ICg3MTcpIDUzMS04NzU1PGJyPiBGYXg6ICg3MTcpIDUzMS0wNDE2PGJyPmh0dHA6PGEgaHJlZj0iaHR0cHM6Ly9tZWQucHN1LmVkdS9tZCI+Ly9tZWQucHN1LmVkdS9tZDwvYT48L3A+PHA+KioqKipFLU1haWwgQ29uZmlkZW50aWFsaXR5IE5vdGljZSoqKioqPGJyPiBUaGlzIG1lc3NhZ2UgKGluY2x1ZGluZyBhbnkgYXR0YWNobWVudHMpIGNvbnRhaW5zIGluZm9ybWF0aW9uIGludGVuZGVkIGZvciBhIHNwZWNpZmljIGluZGl2aWR1YWwocykgYW5kIHB1cnBvc2UgdGhhdCBtYXkgYmUgcHJpdmlsZWdlZCwgY29uZmlkZW50aWFsIG9yIG90aGVyd2lzZSBwcm90ZWN0ZWQgZnJvbSBkaXNjbG9zdXJlIHB1cnN1YW50IHRvIGFwcGxpY2FibGUgbGF3LiBBbnkgaW5hcHByb3ByaWF0ZSB1c2UsIGRpc3RyaWJ1dGlvbiBvciBjb3B5aW5nIG9mIHRoZSBtZXNzYWdlIGlzIHN0cmljdGx5IHByb2hpYml0ZWQgYW5kIG1heSBzdWJqZWN0IHlvdSB0byBjcmltaW5hbCBvciBjaXZpbCBwZW5hbHR5LiBJZiB5b3UgaGF2ZSByZWNlaXZlZCB0aGlzIHRyYW5zbWlzc2lvbiBpbiBlcnJvciwgcGxlYXNlIHJlcGx5IHRvIHRoZSBzZW5kZXIgaW5kaWNhdGluZyB0aGlzIGVycm9yIGFuZCBkZWxldGUgdGhlIHRyYW5zbWlzc2lvbiBmcm9tIHlvdXIgc3lzdGVtIGltbWVkaWF0ZWx5LjwvcD4nCn0KCg=="))
